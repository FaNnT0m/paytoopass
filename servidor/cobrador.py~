#!/usr/bin/env python

import select
import os
from time import sleep
from db import *
from paytoo import *
from XVM import *

os.system("clear")
DB = db()
while(1):
	sleep(1)

	# Comienzo a consultar todos los movimientos que no han sido procesados
	rs = DB.sqlSelect("id,cuenta,id_chofer,monto,tipo_cobro,id_virloc","pagos","estado='PENDING'")
	restantes=rs.rowcount

	for id,cuenta,id_chofer,monto,tipo_cobro,id_virloc in rs.fetchall():
		print id_virloc
		print cuenta,monto
		if tipo_cobro=='WALLET':
			print "Procesando %s : $ %s para la Wallet %s" % (id,int(monto),cuenta)
			transaccion = paytoo()
			request=transaccion.cobrar(int(monto),cuenta)
			print "Transaccion ingresada. Esperando confirmacion"
			print request.msg
			print request.status
			DB.sqlUpdate("pagos","estado='%s',mensaje='%s'" % (request.status,request.msg),"id=%s" % id)
			xvm=XVM()
			DB=db()
			if request.status=="PENDING":
				print "Intentando confirmar"
				request2 = transaccion.confirmar(request.request_id,'888888')
				print request2.msg
				print request2.status
				if request2.status=="OK":
					print "Transaccion COMPLETADA"
					xvm.enviarMensaje(id_virloc,"SSC26",1)
					DB.sqlUpdate("pagos","estado='OK',mensaje='%s'" % request2.msg,"id=%s" % id)
				else:
					print "La transaccion no pudo ser confirmada"
					xvm.enviarMensaje(id_virloc,"SSC27",1)
					xvm.enviarMensaje(id_virloc,"SMT0000000%s" % request2.msg,1)
					DB.sqlUpdate("pagos","estado='%s',mensaje='%s'" % (request2.status,request2.msg),"id=%s" % id)
			else:
				print "La transaccion no pudo ser ingresada"
				xvm.enviarMensaje(id_virloc,"SSC27",1)

				#si esta aprobado SSC26
				#si esta rechazado SSC27
		else:
			print "La transaccion no se ha podido ingresar"
			print request.msg
		restantes=restantes-1
